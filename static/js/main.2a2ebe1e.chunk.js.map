{"version":3,"sources":["components/Form.js","components/FilterButton.js","components/Todo.js","components/About.js","components/Navbar.js","components/Error.js","App.js","components/Home.js","reportWebVitals.js","index.js"],"names":["Form","props","useState","name","setName","onSubmit","e","preventDefault","addTask","className","htmlFor","type","id","autoComplete","value","onChange","target","required","FilterButton","aria-pressed","isPressed","onClick","setFilter","Todo","isEditing","setEditing","newName","setNewName","editFieldRef","useRef","editButtonRef","wasEditing","ref","useEffect","current","usePrevious","isImportant","setImportant","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","About","Navbar","href","Error","data","createContext","App","Provider","path","component","Home","exact","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","useContext","filter","listHeadingRef","editedTaskList","tasks","map","setTasks","updatedTasks","remainingTasks","localStorage","getItem","JSON","parse","setItem","stringify","taskList","filterList","tasksNoun","length","headingText","prevTaskLength","newTask","nanoid","clear","tabIndex","role","aria-labelledby","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a2ebe1e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Form(props) {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.addTask(name);\r\n    setName(\"\");\r\n  }\r\n\r\n  function handleChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2 className=\"label-wrapper\">\r\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n          What needs to be done?\r\n        </label>\r\n      </h2>\r\n\r\n      <input\r\n        type=\"text\"\r\n        id=\"new-todo-input\"\r\n        className=\"input input__lg\"\r\n        name=\"text\"\r\n        autoComplete=\"off\"\r\n        value={name}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nfunction FilterButton(props) {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn toggle-btn\"\r\n      aria-pressed={props.isPressed}\r\n      onClick={() => props.setFilter(props.name)}\r\n    >\r\n      <span className=\"visually-hidden\">Show </span>\r\n      <span>{props.name}</span>\r\n      <span className=\"visually-hidden\"> tasks</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default FilterButton;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nexport default function Todo(props) {\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const editFieldRef = useRef(null);\r\n  const editButtonRef = useRef(null);\r\n  const wasEditing = usePrevious(isEditing);\r\n  const [isImportant, setImportant] = useState(false);\r\n\r\n  function handleChange(e) {\r\n    setNewName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.editTask(props.id, newName);\r\n    setNewName(\"\");\r\n    setEditing(false);\r\n  }\r\n\r\n  const editingTemplate = (\r\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          New name for {props.name}\r\n        </label>\r\n        <input\r\n          id={props.id}\r\n          className=\"todo-text\"\r\n          type=\"text\"\r\n          value={newName}\r\n          onChange={handleChange}\r\n          ref={editFieldRef}\r\n        />\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn todo-cancel\"\r\n          onClick={() => setEditing(false)}\r\n        >\r\n          Cancel\r\n          <span className=\"visually-hidden\">renaming {props.name}</span>\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n          Save\r\n          <span className=\"visually-hidden\">new name for {props.name}</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  const handleToggle = () => {\r\n    setImportant(!isImportant);\r\n  }\r\n\r\n  \r\n  const viewTemplate = (\r\n    <div className=\"stack-small\">\r\n      <div className=\"c-cb\">\r\n        <input\r\n          id={props.id}\r\n          type=\"checkbox\"\r\n          defaultChecked={props.completed}\r\n          onChange={() => props.toggleTaskCompleted(props.id)}\r\n        />\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          {props.name}\r\n        </label>\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn\"\r\n          onClick={() => setEditing(true)}\r\n          ref={editButtonRef}\r\n        >\r\n          Edit <span className=\"visually-hidden\">{props.name}</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn__danger\"\r\n          onClick={() => props.deleteTask(props.id)}\r\n        >\r\n          Delete <span className=\"visually-hidden\">{props.name}</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className={isImportant ? \"btn__important\" : \"btn\"}\r\n          onClick={handleToggle}\r\n        >\r\n          Important <span className=\"visually-hidden\">{props.name}</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!wasEditing && isEditing) {\r\n      editFieldRef.current.focus();\r\n    }\r\n    if (wasEditing && !isEditing) {\r\n      editButtonRef.current.focus();\r\n    }\r\n  }, [wasEditing, isEditing]);\r\n\r\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\r\n  <li className=\"todo stack-small\">\r\n    <div className=\"c-cb\">\r\n      <input\r\n        id={props.id}\r\n        type=\"checkbox\"\r\n        defaultChecked={props.completed}\r\n        onChange={() => props.toggleTaskCompleted(props.id)}\r\n      />\r\n      <label className=\"todo-label\" htmlFor={props.id}>\r\n        {props.name}\r\n      </label>\r\n    </div>\r\n    <div className=\"btn-group\">\r\n      <button type=\"button\" className=\"btn\">\r\n        Edit <span className=\"visually-hidden\">{props.name}</span>\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn__danger\"\r\n        onClick={() => props.deleteTask(props.id)}\r\n      >\r\n        Delete <span className=\"visually-hidden\">{props.name}</span>\r\n      </button>\r\n    </div>\r\n  </li>;\r\n}\r\n","function About() {\r\n  return <h6> About page </h6>;\r\n}\r\n\r\nexport default About;\r\n","function Navbar() {\r\n  return (\r\n    <nav>\r\n      <a href=\"./Home\"> Home </a>\r\n      |\r\n      <a href=\"./About\"> About </a>\r\n    </nav>\r\n  );\r\n}\r\nexport default Navbar;\r\n","function Error() {\r\n  return <h1>Oops! Page not found!</h1>;\r\n}\r\nexport default Error;\r\n","import {Route, Switch} from 'react-router-dom';\nimport './index.css';\nimport { createContext } from 'react';\n\nimport Home from './components/Home';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Error from './components/Error';\n\nexport const data = createContext(null);\n\nfunction App(props){\n  return(\n    <data.Provider value={props}>\n      <Navbar />\n      <Switch>\n        <Route path='./components/Home.js' component={Home} exact/>\n        <Route path='/about' component={About} />\n        <Route component={Error}/>\n      </Switch>\n    </data.Provider>\n  )\n}\n\nexport default App;","import React, { useState, useRef, useEffect, useContext } from \"react\";\r\nimport Form from \"./Form\";\r\nimport FilterButton from \"./FilterButton\";\r\nimport Todo from \"./Todo\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { data } from \"../App\"\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nconst FILTER_MAP = {\r\n  All: () => true,\r\n  Active: (task) => !task.completed,\r\n  Completed: (task) => task.completed,\r\n};\r\n\r\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\r\n\r\nfunction Home(props) {\r\n  props = useContext(data);\r\n\r\n  const [filter, setFilter] = useState(\"All\");\r\n  const listHeadingRef = useRef(null);\r\n\r\n  function addTask(name) {\r\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\r\n    setTasks([...tasks, newTask]);\r\n  }\r\n\r\n  function editTask(id, newName) {\r\n    const editedTaskList = tasks.map((task) => {\r\n      // if this task has the same ID as the edited task\r\n      if (id === task.id) {\r\n        //\r\n        return { ...task, name: newName };\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(editedTaskList);\r\n  }\r\n\r\n  const [tasks, setTasks] = useState(props.tasks);\r\n\r\n  useEffect(() => {\r\n    const data = localStorage.getItem(\"listOfTask\");\r\n    if (data) {\r\n      setTasks(JSON.parse(data));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"listOfTask\", JSON.stringify(tasks));\r\n  });\r\n\r\n  function clearTask() {\r\n    localStorage.clear();\r\n    const newData = [];\r\n    setTasks(newData);\r\n  }\r\n\r\n  function toggleTaskCompleted(id) {\r\n    const updatedTasks = tasks.map((task) => {\r\n      if (id === task.id) {\r\n        return { ...task, completed: !task.completed };\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(updatedTasks);\r\n  }\r\n\r\n  function deleteTask(id) {\r\n    const remainingTasks = tasks.filter((task) => id !== task.id);\r\n    setTasks(remainingTasks);\r\n  }\r\n\r\n  const taskList = tasks\r\n    .filter(FILTER_MAP[filter])\r\n    .map((task) => (\r\n      <Todo\r\n        id={task.id}\r\n        name={task.name}\r\n        completed={task.completed}\r\n        key={task.id}\r\n        toggleTaskCompleted={toggleTaskCompleted}\r\n        deleteTask={deleteTask}\r\n        editTask={editTask}\r\n      />\r\n    ));\r\n\r\n  const filterList = FILTER_NAMES.map((name) => (\r\n    <FilterButton\r\n      key={name}\r\n      name={name}\r\n      isPressed={name === filter}\r\n      setFilter={setFilter}\r\n    />\r\n  ));\r\n\r\n  const tasksNoun = taskList.length !== 1 ? \"tasks\" : \"task\";\r\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\r\n  const prevTaskLength = usePrevious(tasks.length);\r\n\r\n  useEffect(() => {\r\n    if (tasks.length - prevTaskLength === -1) {\r\n      listHeadingRef.current.focus();\r\n    }\r\n  }, [tasks.length, prevTaskLength]);\r\n\r\n  return (\r\n    <div className=\"todoapp stack-large\">\r\n      <Form addTask={addTask} />\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn__clear\"\r\n        onClick={() => clearTask()}\r\n      >\r\n        <span> Clear All </span>\r\n      </button>\r\n      <div className=\"filters btn-group stack-exception\">{filterList}</div>\r\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\r\n        {headingText}\r\n      </h2>\r\n      <ul\r\n        role=\"list\"\r\n        className=\"todo-list stack-large stack-exception\"\r\n        aria-labelledby=\"list-heading\"\r\n      >\r\n        {taskList}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Home from \"./components/Home\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst DATA = [];\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App tasks={DATA}/>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}